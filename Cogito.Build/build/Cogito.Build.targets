<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <AssemblyVersionPath>$([System.IO.Path]::Combine($(ProjectDir), "Properties\AssemblyVersion.cs"))</AssemblyVersionPath>

        <!-- Make the build depend on restore packages -->
        <BuildDependsOn>
            _GenerateAssemblyVersion;
            $(BuildDependsOn);
        </BuildDependsOn>
    </PropertyGroup>

    <Target Name="_GenerateAssemblyVersion">
        <GenerateAssemblyVersion OutputFilename="$(AssemblyVersionPath)" />
    </Target>
  
    <UsingTask TaskName="GenerateAssemblyVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <OutputFilename ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Reference Include="System.Core" />
            <Using Namespace="System" />
            <Using Namespace="System.IO" />
            <Using Namespace="System.Net" />
            <Using Namespace="Microsoft.Build.Framework" />
            <Using Namespace="Microsoft.Build.Utilities" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                try {
                    OutputFilename = Path.GetFullPath(OutputFilename);

                    var version = string.Format(@"{0}.{1}.{2}.{3}",
			DateTime.Today.Year,
			DateTime.Today.Month,
			DateTime.Today.Day,
			0);

                    File.WriteAllText(OutputFilename, string.Format(@"
using System.Reflection;

[assembly: AssemblyVersion(""{0}"")]
[assembly: AssemblyFileVersion(""{0}"")]

", version).Trim());
                    return true;
                }
                catch (Exception ex) {
                    Log.LogErrorFromException(ex);
                    return false;
                }
            ]]>
            </Code>
        </Task>
    </UsingTask>
</Project>